{"version":3,"file":"static/js/739.441e6284.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","redux/contacts/contacts.selector.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.js","redux/filter/filter.selector.js","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/Loader/Loader.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import styled from 'styled-components'\n\nexport const Form = styled.form`\n    margin: 50px auto 25px;\n    max-width: 420px;\n    padding-top: 50px;\n    box-shadow: 0px 0px 10px;\n    border-radius: 15px;\n    \n\n`\n\nexport const Label = styled.label`\nfont-weight: 600;\npadding-left: 5px;\n`\n\nexport const Input = styled.input`\nborder: 1px solid #ccc;\nborder-radius: 5px;\nmargin-bottom: 10px;\npadding: 8px;\nwidth: 90%;\n`\n\nexport const Button = styled.button`\ncursor: pointer; \npadding: 10px;\nwidth: 100%;\ncolor: white;\nbackground-color: paleturquoise;\nborder: none;\nmargin-bottom: 15px;\nborder-radius: 5px;\nfont-size: 20px;\n`\n\n","export const selectContacts = state => state.contacts.contacts;\nexport const selectContactsIsLoading = state => state.contacts.isLoading;\nexport const selectContactsError = state => state.contacts.error;","import { useState } from 'react';\nimport * as SC from './ContactForm.styled';\n\nimport { nanoid } from 'nanoid';\nimport { useDispatch, useSelector } from 'react-redux';\n\n\nimport { selectContacts } from 'redux/contacts/contacts.selector';\nimport { addContactsThunk } from 'redux/contacts/contactsOperation';\n\n\nconst ContactForm = () => {\nconst dispatch = useDispatch()\nconst contacts = useSelector(selectContacts);\n\n  \n  \n \n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    \n\n    const hasDuplicates = contacts?.some(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n\n    if (hasDuplicates) {\n      alert(`${name} is already in contacts!`);\n      return;\n    }\n    const newContact = {\n      name,\n      number,\n      id: nanoid(),\n    };\n     dispatch(addContactsThunk(newContact))\n    setName('');\n    setNumber('');\n\n  };\n\n  const handleChange = evt => {\n    const { name, value } = evt.target;\n    switch (name) {\n      case 'name': {\n        setName(value);\n        return;\n      }\n      case 'number': {\n        setNumber(value);\n        return;\n      }\n      default:\n        return;\n    }\n  };\n\n  return (\n    <SC.Form onSubmit={handleSubmit}>\n      <SC.Label>\n        Name\n        <SC.Input\n          onChange={handleChange}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          required\n        />\n      </SC.Label>\n      <SC.Label>\n        Number\n        <SC.Input\n          type=\"text\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n          required\n        />\n      </SC.Label>\n      <SC.Button type=\"submit\">Add contact</SC.Button>\n    </SC.Form>\n  );\n};\n\nexport default ContactForm;\n","import styled from 'styled-components'\n\nexport const List = styled.ul`\ndisplay: flex;\nalign-items: center;\nflex-direction: column;\njustify-content: center;\npadding: 0;\npadding-top: 30px;\n`\nexport const Item = styled.li`\ndisplay: flex;\ngap: 20px;\njustify-content: space-between;\nwidth: 400px;\nborder-bottom: 1px solid paleturquoise;\n`\nexport const Button = styled.button`\ncursor: pointer; \npadding: 10px;\ncolor: white;\nbackground-color: paleturquoise;\nborder: none;\nmargin-bottom: 15px;\nborder-radius: 5px;\nfont-size: 15px;\n`","export const selectContactsFilter = state => state.filter;","import { useDispatch, useSelector } from 'react-redux';\nimport * as SC from '../ContactList/ContactList.styled';\n\n\nimport { deleteContactsThunk } from 'redux/contacts/contactsOperation';\nimport { selectContacts, selectContactsIsLoading } from 'redux/contacts/contacts.selector';\nimport { selectContactsFilter } from 'redux/filter/filter.selector';\n\n\n\n\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectContactsIsLoading);\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectContactsFilter);\n\n\n\n  const getFilteredContact = contacts?.filter(({ name }) =>\n    name.toLowerCase().includes(filter)\n  );\nconsole.log ('filter', filter)\nconsole.log ('contacts', contacts)\n\n  return (\n    \n  \n\n    <SC.List>\n    {!isLoading && getFilteredContact?.map(({ id, name, phone }) => (\n      <SC.Item key={id}>\n        {name}: {phone}\n        \n        <SC.Button onClick={() => dispatch(deleteContactsThunk(id))}> \n          Delete\n        </SC.Button> \n      </SC.Item>\n    ))}\n  </SC.List>\n  );\n};\n\nexport default ContactList;\n","import styled from 'styled-components'\n\nexport const Wrapper = styled.div`\nmargin: 50px auto 25px;\nmax-width: 320px;\npadding: 50px;\nbox-shadow: 0px 0px 10px;\nborder-radius: 15px;\n`\n\nexport const Label = styled.label`\nfont-weight: 600;\npadding-left: 5px;\n`\n\nexport const Input = styled.input`\nborder: 1px solid #ccc;\nborder-radius: 5px;\npadding: 8px;\nwidth: 100%;\n`","import { useDispatch, useSelector } from 'react-redux';\nimport * as SC from '../Filter/Filter.styled';\n\nimport { filterChange } from 'redux/filter/filter.slice';\nimport { selectContactsFilter } from 'redux/filter/filter.selector';\n\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectContactsFilter);\n\n  // const filterContacts = evt => {\n  //   // const filterValue = evt.target.value.toLowerCase().trim();\n  //   dispatch(filterChange(evt.target.value));\n  // };\n \n  return (\n    <SC.Wrapper>\n      <SC.Label>\n        Find contacts by name\n        <SC.Input\n          type=\"text\"\n          value={filter}\n          onChange={(evt) => dispatch(filterChange(evt.target.value))}\n        />\n      </SC.Label>\n    </SC.Wrapper>\n  );\n};\n\nexport default Filter;\n","import { ColorRing } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <div className=\"loader\">\n      <ColorRing\n        visible={true}\n        height=\"80\"\n        width=\"80\"\n        ariaLabel=\"blocks-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"blocks-wrapper\"\n        colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n      />\n    </div>\n  );\n};\n\nexport default Loader;","import ContactForm from \"components/ContactForm/ContactForm\"\nimport ContactList from \"components/ContactList/ContactList\"\nimport Filter from \"components/Filter/Filter\"\nimport Loader from \"components/Loader/Loader\"\n\nimport { useEffect } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { selectIsLoading } from \"redux/auth/auth.selector\"\nimport { selectContacts } from \"redux/contacts/contacts.selector\"\nimport { fetchContactsThunk } from \"redux/contacts/contactsOperation\"\n\n\n\n\n\n\n\nconst ContactsPage = () => {\n    const dispatch = useDispatch();\n    \n    const contacts = useSelector(selectContacts)\n    const isLoading = useSelector(selectIsLoading)\n    \n    \n\n    useEffect(() => {\ndispatch(fetchContactsThunk())\n    },[dispatch])\n\n    return (\n      <>\n      <ContactForm/>\n      {contacts.length !== 0 && <Filter />}\n      {isLoading ? <Loader /> : <ContactList />}\n    \n      </>\n      \n    )\n}\n\n\nexport default ContactsPage"],"names":["Form","styled","_templateObject","_taggedTemplateLiteral","Label","_templateObject2","Input","_templateObject3","Button","_templateObject4","selectContacts","state","contacts","selectContactsIsLoading","isLoading","dispatch","useDispatch","useSelector","_useState","useState","_useState2","_slicedToArray","name","setName","_useState3","_useState4","number","setNumber","handleChange","evt","_evt$target","target","value","_jsxs","SC","onSubmit","event","preventDefault","some","contact","toLowerCase","alert","concat","newContact","id","nanoid","addContactsThunk","children","_jsx","onChange","type","pattern","required","List","Item","selectContactsFilter","filter","getFilteredContact","_ref","includes","console","log","map","_ref2","phone","onClick","deleteContactsThunk","Wrapper","filterChange","className","ColorRing","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","selectIsLoading","useEffect","fetchContactsThunk","_Fragment","ContactForm","length","Filter","Loader","ContactList"],"sourceRoot":""}